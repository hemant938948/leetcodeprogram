class Solution {
  public:
  bool cycleDFS(vector<int> adj[],int u,vector<bool> &visited,int parent)
  {
      visited[u] = true;
      for(int &v : adj[u])
      {
          if(v==parent)
          {
              continue;
          }
          if(visited[v])
          {
              return true;
          }
          if(cycleDFS(adj,v,visited,u) == true)
          {
              return true;
          }
      }
      return false;
  }
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        
        vector<bool> visited(V,false);
        for(int i=0 ; i<V ; i++)
        {
            if(!visited[i] and cycleDFS(adj,i,visited,-1))
            {
                return true;
            }
        }
        return false;
    }
};
